
Vector API quick reference
--------------------------

The tables below list the functions of the vector API. The "EW" column indicates whether the
operation acts element-wise.

The "Signature" column is intended as a hint which quickly conveys the kind of the conceptual inputs
to and outputs from the operation.  The signatures are only intended to convey how many (conceptual)
inputs and outputs there are, and their dimensionality.

The functions themselves will typically take more arguments than these signatures indicate.  For
example, most functions take vector lengths as input, and many take shift values which are used to
control growth of element bit-depth.  Check the function's full documentation to get more detailed
information.

The following symbols are used in the signatures:

.. table::
    :widths: 30 70
    :class: longtable

    +--------------------------------------+---------------------------------------------+
    |  Symbol                              | Description                                 |
    +======================================+=============================================+
    | :math:`\mathbb{S}`                   | A scalar input or output value.             |
    +--------------------------------------+---------------------------------------------+
    | :math:`\mathbb{V}`                   | A vector-valued input or output.            |
    +--------------------------------------+---------------------------------------------+
    | :math:`\mathbb{M}`                   | A matrix-valued input or output.            |
    +--------------------------------------+---------------------------------------------+
    | :math:`\varnothing`                  | Placeholder indicating no input or output.  |
    +--------------------------------------+---------------------------------------------+

For example, the operation signature :math:`(\mathbb{V \times V \times S}) \to \mathbb{V}` indicates
the operation takes two vector inputs and a scalar input, and the output is a vector.


* `32-Bit Vector Ops <vect32_api_>`_
* `16-Bit Vector Ops <vect16_api_>`_
* `8-Bit Vector Ops <vect8_api_>`_
* `Complex 32-Bit Vector Ops <vect32_complex_api_>`_
* `Complex 16-Bit Vector Ops <vect16_complex_api_>`_
* `Fixed-Point Vector Ops <vect_fixed_point_api_>`_
* `Floating-Point Vector Ops <vect_float_api_>`_
* `Other Vector Ops <vect_other_api_>`_
* `Vector Type Conversions <vect_conversion_api_>`_


.. _vect32_api:

.. table::
    :widths: 50 10 35
    :class: longtable

    +--------------------------------------------------------------------------------------------------+
    | **32-bit Vector Ops**                                                                            |
    +-------------------------------------------------+-----+------------------------------------------+
    | Function                                        | EW  |  Signature                               |
    +=================================================+=====+==========================================+
    | :c:func:`vect_s32_copy()`                       |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_abs()`                        |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_abs_sum()`                    |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_add()`                        |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_add_scalar()`                 |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_argmax()`                     |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_argmin()`                     |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_clip()`                       |  x  | :math:`(\mathbb{V \times S \times S})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_dot()`                        |     | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_energy()`                     |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_headroom()`                   |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_inverse()`                    |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_max()`                        |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_max_elementwise()`            |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_min()`                        |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_min_elementwise()`            |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_mul()`                        |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_macc()`                       |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_nmacc()`                      |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_rect()`                       |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_scale()`                      |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_set()`                        |  x  | :math:`\mathbb{S}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_shl()`                        |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_shr()`                        |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_sqrt()`                       |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_sub()`                        |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_sum()`                        |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_zip()`                        |     | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_unzip()`                      |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to (\mathbb{V \times V})`        |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_convolve_valid()`             |     | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_convolve_same()`              |     | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_log_base()`                   |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_log()`                        |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_log2()`                       |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s32_log10()`                      |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`chunk_s32_dot()`                       |     | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`chunk_s32_log()`                       |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+

.. _vect16_api:

.. table::
    :widths: 50 10 35
    :class: longtable

    +--------------------------------------------------------------------------------------------------+
    | **16-bit Vector Ops**                                                                            |
    +-------------------------------------------------+-----+------------------------------------------+
    | Function                                        | EW  |  Signature                               |
    +=================================================+=====+==========================================+
    | :c:func:`vect_s16_abs()`                        |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_abs_sum()`                    |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_add()`                        |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_add_scalar()`                 |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_argmax()`                     |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_argmin()`                     |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_clip()`                       |  x  | :math:`(\mathbb{V \times S \times S})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_dot()`                        |     | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_energy()`                     |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_headroom()`                   |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_inverse()`                    |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_max()`                        |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_max_elementwise()`            |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_min()`                        |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_min_elementwise()`            |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_mul()`                        |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_macc()`                       |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_nmacc()`                      |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_rect()`                       |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_scale()`                      |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_set()`                        |  x  | :math:`\mathbb{S}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_shl()`                        |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_shr()`                        |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_sqrt()`                       |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_sub()`                        |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_sum()`                        |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_extract_high_byte()`          |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_s16_extract_low_byte()`           |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+

.. _vect8_api:

.. table::
    :widths: 40 10 20 30
    :class: longtable

    +---------------------------------------------------------------------------------------------------------------+
    | **8-bit Vector Ops**                                                                                          |
    +---------------------------------+-----+-----------------------------------------------+-----------------------+
    | Function                        | EW  |  Signature                                    | Brief                 |
    +=================================+=====+===============================================+=======================+
    | :c:func:`vect_s8_is_negative()` |  x  | :math:`\mathbb{V}`                            | Identify negative     |
    |                                 |     | :math:`\to \mathbb{V}`                        | elements              |
    +---------------------------------+-----+-----------------------------------------------+-----------------------+


.. _vect32_complex_api:

.. table::
    :widths: 50 10 35
    :class: longtable

    +--------------------------------------------------------------------------------------------------+
    | **32-bit Complex Vector Ops**                                                                    |
    +-------------------------------------------------+-----+------------------------------------------+
    | Function                                        | EW  |  Signature                               |
    +=================================================+=====+==========================================+
    | :c:func:`vect_complex_s32_add()`                |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_add_scalar()`         |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_conj_macc()`          |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_conj_mul()`           |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_conj_nmacc()`         |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_conjugate()`          |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_headroom()`           |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_macc()`               |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_mag()`                |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_mul()`                |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_nmacc()`              |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_real_mul()`           |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_real_scale()`         |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_scale()`              |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_set()`                |  x  | :math:`\mathbb{S}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_shl()`                |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_shr()`                |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_squared_mag()`        |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_sub()`                |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_sum()`                |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s32_tail_reverse()`       |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+

.. _vect16_complex_api:

.. table::
    :widths: 50 10 35
    :class: longtable

    +--------------------------------------------------------------------------------------------------+
    | **16-bit Complex Vector Ops**                                                                    |
    +-------------------------------------------------+-----+------------------------------------------+
    | Function                                        | EW  |  Signature                               |
    +=================================================+=====+==========================================+
    | :c:func:`vect_complex_s16_add()`                |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_add_scalar()`         |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_conj_mul()`           |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_conj_macc()`          |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_conj_nmacc()`         |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_headroom()`           |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_macc()`               |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_mag()`                |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_mul()`                |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_nmacc()`              |  x  | :math:`(\mathbb{V \times V \times V})`   |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_real_mul()`           |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_real_scale()`         |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_scale()`              |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_set()`                |  x  | :math:`\mathbb{S}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_shl()`                |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_shr()`                |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_squared_mag()`        |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_sub()`                |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_s16_sum()`                |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+

.. _vect_fixed_point_api:

.. table::
    :widths: 50 10 35
    :class: longtable

    +--------------------------------------------------------------------------------------------------+
    | **Fixed-Point Vector Ops**                                                                       |
    +-------------------------------------------------+-----+------------------------------------------+
    | Function                                        | EW  |  Signature                               |
    +=================================================+=====+==========================================+
    | :c:func:`vect_q30_power_series()`               |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_q30_exp_small()`                  |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`chunk_q30_power_series()`              |  x  | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`chunk_q30_exp_small()`                 |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+

.. _vect_float_api:

.. table::
    :widths: 50 10 35
    :class: longtable

    +--------------------------------------------------------------------------------------------------+
    | **Floating-Point Vector Ops**                                                                    |
    +-------------------------------------------------+-----+------------------------------------------+
    | Function                                        | EW  |  Signature                               |
    +=================================================+=====+==========================================+
    | :c:func:`vect_f32_max_exponent()`               |     | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_f32_dot()`                        |     | :math:`(\mathbb{V \times V})`            |
    |                                                 |     | :math:`\to \mathbb{S}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_f32_add()`                        |  x  | :math:`\mathbb{V \times V}`              |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_float_s32_log_base()`             |  x  | :math:`(\mathbb{V \times S})`            |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_float_s32_log()`                  |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_float_s32_log2()`                 |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_float_s32_log10()`                |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`chunk_float_s32_log()`                 |  x  | :math:`\mathbb{V}`                       |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_f32_add()`                |  x  | :math:`\mathbb{V \times V}`              |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_f32_mul()`                |  x  | :math:`\mathbb{V \times V}`              |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_f32_conj_mul()`           |  x  | :math:`\mathbb{V \times V}`              |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_f32_macc()`               |  x  | :math:`\mathbb{V \times V \times V}`     |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+
    | :c:func:`vect_complex_f32_conj_macc()`          |  x  | :math:`\mathbb{V \times V \times V}`     |
    |                                                 |     | :math:`\to \mathbb{V}`                   |
    +-------------------------------------------------+-----+------------------------------------------+


.. _vect_other_api:

Note that several of the functions below take vectors of the :c:struct:`split_acc_s32_t` type. This
is a 32-bit vector type used for accumulating results of 8- or 16-bit operations in a manner
optimized for the XS3 VPU.


.. table::
    :widths: 50 10 35
    :class: longtable

    +--------------------------------------------------------------------------------+
    | **Other Vector Ops**                                                           |
    +----------------------------------------+---+-----------------------------------+
    | Function                               |EW |  Signature                        |
    +========================================+===+===================================+
    | :c:func:`vect_split_acc_s32_shr()`     | x | :math:`(\mathbb{V \times S})`     |
    |                                        |   | :math:`\to \mathbb{V}`            |
    +----------------------------------------+---+-----------------------------------+
    | :c:func:`vect_s32_merge_accs()`        | x | :math:`\mathbb{V}`                |
    |                                        |   | :math:`\to \mathbb{V}`            |
    +----------------------------------------+---+-----------------------------------+
    | :c:func:`vect_s32_split_accs()`        | x | :math:`\mathbb{V}`                |
    |                                        |   | :math:`\to \mathbb{V}`            |
    +----------------------------------------+---+-----------------------------------+
    | :c:func:`chunk_s16_accumulate()`       | x | :math:`\mathbb{V}`                |
    |                                        |   | :math:`\to \mathbb{V}`            |
    +----------------------------------------+---+-----------------------------------+
    | :c:func:`mat_mul_s8_x_s8_yield_s32()`  |   | :math:`(\mathbb{M \times V})`     |
    |                                        |   | :math:`\to \mathbb{V}`            |
    +----------------------------------------+---+-----------------------------------+
    | :c:func:`mat_mul_s8_x_s16_yield_s32()` |   | :math:`(\mathbb{M \times V})`     |
    |                                        |   | :math:`\to \mathbb{V}`            |
    +----------------------------------------+---+-----------------------------------+


.. _vect_conversion_api:

|beginfullwidth|

.. table::
    :widths: 50 25 25
    :class: longtable

    +----------------------------------------------------------------------------------------------------------+
    | **Vector Type Conversion Ops**                                                                           |
    +--------------------------------------------------+-------------------------------------------------------+
    | Function                                         | Array Element Type                                    |
    +--------------------------------------------------+---------------------------+---------------------------+
    |                                                  | Input                     | Output                    |
    +==================================================+===========================+===========================+
    | :c:func:`vect_s16_to_vect_s32()`                 | ``int16_t``               | ``int32_t``               |
    +--------------------------------------------------+---------------------------+---------------------------+
    | :c:func:`vect_s32_to_vect_s16()`                 | ``int32_t``               | ``int16_t``               |
    +--------------------------------------------------+---------------------------+---------------------------+
    | :c:func:`vect_s32_to_vect_f32()`                 | ``int32_t``               | ``float``                 |
    +--------------------------------------------------+---------------------------+---------------------------+
    | :c:func:`vect_f32_to_vect_s32()`                 | ``float``                 | ``int32_t``               |
    +--------------------------------------------------+---------------------------+---------------------------+
    | :c:func:`vect_complex_s16_to_vect_complex_s32()` | :c:struct:`complex_s16_t` | :c:struct:`complex_s32_t` |
    +--------------------------------------------------+---------------------------+---------------------------+
    | :c:func:`vect_complex_s32_to_vect_complex_s16()` | :c:struct:`complex_s32_t` | :c:struct:`complex_s16_t` |
    +--------------------------------------------------+---------------------------+---------------------------+


|endfullwidth|
